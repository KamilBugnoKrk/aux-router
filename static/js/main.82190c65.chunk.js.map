{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["AuxLink","props","history","useHistory","match","useRouteMatch","onClick","oldPath","componentName","getComponentName","regex","RegExp","AuxRouter","React","AuxRoute","path","component","One","Two","ComponentA","componentValue","description","ComponentB","App","ReactDOM","render","document","getElementById"],"mappings":"yPAeaA,EAAWC,YACtB,IAAMC,EAAUC,cACVC,EAAQC,cAiCd,OAAO,kCAAQC,QAxBf,WACE,IAKA,EALIC,EAAUL,WAAd,SACIM,EAAgBP,gBAChBA,EADgBA,cATtB,WACE,GAAIG,uBAAJ,EACE,+EAEF,OAAOA,gBAAoBA,uBAA3B,GAOIK,GAGAD,gBAAJ,GACEA,EAAgBA,cAAhBA,IACAE,EAAQ,IAAIC,OAAO,IAAX,OAARD,EAAQ,OAERA,EAAQ,IAAIC,OAAO,IAAX,OAARD,EAAQ,aAEWH,QAArB,GAGEL,OACEK,sBAA0BC,EAA1BD,YAA2CN,EAD7CC,kBAIAA,OAAaK,EAAU,IAAH,OAAOC,EAAP,YAAwBP,EAA5CC,eAAoB,QAIUD,EAAlC,cAGWW,EAAaX,YACxB,OAAOY,qCAAiBZ,EAAxB,WAaWa,EAAYb,YACvB,IAAMG,EAAQC,cAed,OAAO,6BAAOU,KAZPd,EAAL,eAEO,KAAIG,MAET,WAAWA,kDAAX,YACEH,EADF,uBAIA,cAAcA,EAAMO,cAApB,YAAqCP,EAArC,uBAPA,cAAcA,EAAd,eAW2Be,UAAWf,EAAMe,aChFlD,SAASC,IACP,OAAO,kCAGT,SAASC,IACP,OAAO,kCAGT,SAASC,IACP,OACE,oCACE,2CACA,6BACE,4BACE,4BACE,kBAAC,EAAD,CACEX,cAAc,aACdY,eAAe,MACfC,YAAY,uBAGhB,4BACE,kBAAC,EAAD,CACEb,cAAc,aACdY,eAAe,MACfC,YAAY,yBAKpB,kBAAC,EAAD,CACEb,cAAc,aACdY,eAAe,MACfJ,UAAWC,IAEb,kBAAC,EAAD,CACET,cAAc,aACdY,eAAe,MACfJ,UAAWE,KAMnB,SAASI,IACP,OACE,oCACE,2CACA,6BACE,4BACE,4BACE,kBAAC,EAAD,CAASF,eAAe,MAAMC,YAAY,uBAE5C,4BACE,kBAAC,EAAD,CAASD,eAAe,MAAMC,YAAY,yBAIhD,kBAAC,EAAD,CAAUD,eAAe,MAAMJ,UAAWC,IAC1C,kBAAC,EAAD,CAAUG,eAAe,MAAMJ,UAAWE,KAKhD,IAUeK,EAVH,WACV,OACE,kBAAC,EAAD,KACE,kBAACJ,EAAD,MACA,kBAAC,EAAD,CAASX,cAAc,aAAaa,YAAY,qBAChD,kBAAC,EAAD,CAAUb,cAAc,aAAaQ,UAAWM,MClEtDE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.82190c65.chunk.js","sourcesContent":["import * as React from 'react'\nimport {\n  useHistory,\n  BrowserRouter,\n  Switch,\n  Route,\n  useRouteMatch\n} from 'react-router-dom'\n\ninterface AuxLinkProps {\n  componentName?: string\n  componentValue?: string\n  description: string\n}\n\nexport const AuxLink = (props: AuxLinkProps) => {\n  const history = useHistory()\n  const match = useRouteMatch()\n\n  function getComponentName() {\n    if (match.url.lastIndexOf('(') < 0) {\n      throw 'AuxLink should have componentName if it is not within AuxRoute element!'\n    }\n    return match.url.substring(match.url.lastIndexOf('(') + 1)\n  }\n\n  function onClick(): void {\n    let oldPath = history.location.pathname\n    let componentName = props.componentName\n      ? props.componentName\n      : getComponentName()\n\n    let regex: RegExp\n    if (componentName.indexOf(')') >= 0) {\n      componentName = componentName.replace(')', '')\n      regex = new RegExp(`(${componentName})`)\n    } else {\n      regex = new RegExp(`(${componentName}\\\\/\\\\w+)`)\n    }\n    let foundComponent = oldPath.match(regex)\n\n    if (foundComponent) {\n      history.push(\n        oldPath.replace(regex, `${componentName}/${props.componentValue}`)\n      )\n    } else {\n      history.push(oldPath + `(${componentName}/${props.componentValue})`)\n    }\n  }\n\n  return <button onClick={onClick}>{props.description}</button>\n}\n\nexport const AuxRouter = (props: any) => {\n  return <BrowserRouter> {props.children}</BrowserRouter>\n}\n\nexport const AuxSwitch = (props: any) => {\n  return <Switch> {props.children}</Switch>\n}\n\ninterface AuxRouteProps {\n  component: any\n  componentName?: string\n  componentValue?: string\n}\n\nexport const AuxRoute = (props: AuxRouteProps) => {\n  const match = useRouteMatch()\n\n  const getPath = (): string => {\n    if (!props.componentValue) {\n      return `*\\\\(${props.componentName}`\n    } else if (match.url != '/') {\n      debugger\n      return `*${match.url.replaceAll('(', `\\\\(`).replaceAll(')', `\\\\)`)}/${\n        props.componentValue\n      }\\\\)*`\n    } else {\n      return `*\\\\(${props.componentName}/${props.componentValue}\\\\)*`\n    }\n  }\n\n  return <Route path={getPath()} component={props.component} />\n}\n","import React from 'react'\nimport { AuxLink, AuxRouter, AuxRoute } from 'aux-router'\n\nfunction One() {\n  return <p>One</p>\n}\n\nfunction Two() {\n  return <p>Two</p>\n}\n\nfunction ComponentA() {\n  return (\n    <>\n      <h2>Component A</h2>\n      <nav>\n        <ul>\n          <li>\n            <AuxLink\n              componentName='componentA'\n              componentValue='one'\n              description='Component A - one'\n            />\n          </li>\n          <li>\n            <AuxLink\n              componentName='componentA'\n              componentValue='two'\n              description='Component A - two'\n            />\n          </li>\n        </ul>\n      </nav>\n      <AuxRoute\n        componentName='componentA'\n        componentValue='one'\n        component={One}\n      />\n      <AuxRoute\n        componentName='componentA'\n        componentValue='two'\n        component={Two}\n      />\n    </>\n  )\n}\n\nfunction ComponentB() {\n  return (\n    <>\n      <h2>Component B</h2>\n      <nav>\n        <ul>\n          <li>\n            <AuxLink componentValue='one' description='Component B - one' />\n          </li>\n          <li>\n            <AuxLink componentValue='two' description='Component B - two' />\n          </li>\n        </ul>\n      </nav>\n      <AuxRoute componentValue='one' component={One} />\n      <AuxRoute componentValue='two' component={Two} />\n    </>\n  )\n}\n\nconst App = () => {\n  return (\n    <AuxRouter>\n      <ComponentA />\n      <AuxLink componentName='componentB' description='Show Component B' />\n      <AuxRoute componentName='componentB' component={ComponentB} />\n    </AuxRouter>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}